name: Cache toolchain

on: workflow_call

jobs:
    build:

        runs-on: ubuntu-latest
    
        steps:
        - uses: actions/checkout@v3
        
        - name: Cache DragonOS GCC
          id: cache-dragonos-gcc
          uses: actions/cache@v3
          env:
              cache-name: cache-dragonos-gcc
          with:
            path: |
              ~/opt
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('tools/build_gcc_toolchain.sh') }}-${{ hashFiles('tools/install_musl_gcc.sh') }}
        
        - if: ${{ steps.cache-dragonos-gcc.outputs.cache-hit != 'true' }}
          name: build dragonos-gcc
          continue-on-error: true
          run: |
              bash tools/build_gcc_toolchain.sh -f
              bash tools/install_musl_gcc.sh
        
        - uses: ./.github/actions/install-apt-packages

        - name: Cache build tools
          id: cache-build-tools
          uses: actions/cache@v3
          env:
              cache-name: cache-build-tools
              dadk_version: 0.1.6
          with:
            path: |
              ~/.cargo
              ~/.rustup
              ~/.bashrc
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.dadk_version }}-${{ hashFiles('.github/workflows/cache-toolchain.yml') }}
        
        - if: ${{ steps.cache-build-tools.outputs.cache-hit != 'true' }}
          name: Install toolchain
          continue-on-error: false
          run:  | 
           
            cargo install cargo-binutils
            rustup toolchain install nightly-x86_64-unknown-linux-gnu
            rustup toolchain install nightly-2023-01-21-x86_64-unknown-linux-gnu
            rustup toolchain install nightly-2023-08-15-x86_64-unknown-linux-gnu
            rustup component add rust-src --toolchain nightly-2023-01-21-x86_64-unknown-linux-gnu
            rustup component add rust-src --toolchain nightly-2023-08-15-x86_64-unknown-linux-gnu
            rustup target add x86_64-unknown-none --toolchain nightly-2023-01-21-x86_64-unknown-linux-gnu
            rustup target add x86_64-unknown-none --toolchain nightly-2023-08-15-x86_64-unknown-linux-gnu

            rustup toolchain install nightly-2023-01-21-riscv64gc-unknown-linux-gnu --force-non-host
            rustup toolchain install nightly-2023-08-15-riscv64gc-unknown-linux-gnu --force-non-host
            rustup target add riscv64gc-unknown-none-elf --toolchain nightly-2023-01-21-riscv64gc-unknown-linux-gnu
            rustup target add riscv64imac-unknown-none-elf --toolchain nightly-2023-01-21-riscv64gc-unknown-linux-gnu
            rustup target add riscv64gc-unknown-none-elf --toolchain nightly-2023-08-15-riscv64gc-unknown-linux-gnu
            rustup target add riscv64imac-unknown-none-elf --toolchain nightly-2023-08-15-riscv64gc-unknown-linux-gnu
                
            rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
            rustup component add rust-src
            rustup component add llvm-tools-preview

            rustup component add rustfmt
            rustup component add rustfmt --toolchain nightly-x86_64-unknown-linux-gnu
            rustup component add rustfmt --toolchain nightly-2023-01-21-x86_64-unknown-linux-gnu
            rustup component add rustfmt --toolchain nightly-2023-08-15-x86_64-unknown-linux-gnu
            rustup component add rustfmt --toolchain nightly-2023-01-21-riscv64gc-unknown-linux-gnu
            rustup component add rustfmt --toolchain nightly-2023-08-15-riscv64gc-unknown-linux-gnu

            rustup default nightly

            cargo install dadk --version 0.1.6
          

            fork_toolchain_from="nightly-2023-08-15-x86_64-unknown-linux-gnu"
            custom_toolchain="nightly-2023-08-15-x86_64-unknown-linux_dragonos-gnu"
            custom_toolchain_dir="$(dirname $(rustc --print sysroot))/${custom_toolchain}"
            echo "Custom toolchain does not exist, creating..."
            rustup toolchain install ${fork_toolchain_from}
            rustup component add --toolchain ${fork_toolchain_from} rust-src
            rustup target add --toolchain ${fork_toolchain_from} x86_64-unknown-linux-musl
            cp -r $(dirname $(rustc --print sysroot))/${fork_toolchain_from} ${custom_toolchain_dir}
            self_contained_dir=${custom_toolchain_dir}/lib/rustlib/x86_64-unknown-linux-musl/lib/self-contained
            cp -f ${self_contained_dir}/crt1.o ${self_contained_dir}/rcrt1.o


