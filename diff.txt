diff --git a/kernel/crates/unified-init/macros/src/lib.rs b/kernel/crates/unified-init/macros/src/lib.rs
index 9bea5f0..0d73646 100644
--- a/kernel/crates/unified-init/macros/src/lib.rs
+++ b/kernel/crates/unified-init/macros/src/lib.rs
@@ -80,7 +80,7 @@ fn do_unified_init(args: TokenStream, input: TokenStream) -> syn::Result<proc_ma
 /// ```
 fn check_function_signature(function: &ItemFn) -> syn::Result<()> {
     // 检查函数签名
-    if function.sig.inputs.len() != 0 {
+    if !function.sig.inputs.is_empty() {
         return Err(syn::Error::new(
             function.sig.inputs.span(),
             "Expected no arguments",
diff --git a/kernel/src/arch/x86_64/kvm/vmx/vcpu.rs b/kernel/src/arch/x86_64/kvm/vmx/vcpu.rs
index a0799d4..54489a8 100644
--- a/kernel/src/arch/x86_64/kvm/vmx/vcpu.rs
+++ b/kernel/src/arch/x86_64/kvm/vmx/vcpu.rs
@@ -534,7 +534,7 @@ pub fn adjust_vmx_exit_controls() -> u32 {
 }
 
 pub fn adjust_vmx_pinbased_controls() -> u32 {
-    let mut controls: u32 = 0000_0016;
+    let mut controls: u32 = 16;
     adjust_vmx_controls(0, 0, msr::IA32_VMX_TRUE_PINBASED_CTLS, &mut controls);
     // kdebug!("adjust_vmx_pinbased_controls: {:x}", controls);
     return controls;
diff --git a/kernel/src/driver/base/block/block_device.rs b/kernel/src/driver/base/block/block_device.rs
index 6dc6e56..154dba0 100644
--- a/kernel/src/driver/base/block/block_device.rs
+++ b/kernel/src/driver/base/block/block_device.rs
@@ -70,7 +70,8 @@ impl BlockIter {
         return BlockIter {
             begin: start_addr,
             end: end_addr,
-            blk_size_log2: blk_size_log2,
+            
+            blk_size_log2,
             multiblock: true,
         };
     }
diff --git a/kernel/src/driver/timers/hpet/mod.rs b/kernel/src/driver/timers/hpet/mod.rs
index 82717fe..4fea974 100644
--- a/kernel/src/driver/timers/hpet/mod.rs
+++ b/kernel/src/driver/timers/hpet/mod.rs
@@ -33,7 +33,7 @@ impl HpetRegisters {
 
     /// 获取 HPET 计数器的频率
     pub fn frequency(&self) -> u64 {
-        10000_0000_0000_000 / self.counter_clock_period()
+        1_000_000_000_000_000 / self.counter_clock_period()
     }
 
     pub fn main_counter_value(&self) -> u64 {
diff --git a/kernel/src/driver/tty/tty_ldisc/ntty.rs b/kernel/src/driver/tty/tty_ldisc/ntty.rs
index d32dba2..4b681ba 100644
--- a/kernel/src/driver/tty/tty_ldisc/ntty.rs
+++ b/kernel/src/driver/tty/tty_ldisc/ntty.rs
@@ -1598,10 +1598,8 @@ impl TtyLineDiscipline for NTtyLinediscipline {
                 } else if ldata.canon_copy_from_read_buf(buf, &mut nr, &mut offset)? {
                     return Ok(len - nr);
                 }
-            } else {
-                if ldata.copy_from_read_buf(termios, buf, &mut nr, &mut offset)? {
-                    return Ok(len - nr);
-                }
+            } else if ldata.copy_from_read_buf(termios, buf, &mut nr, &mut offset)? {
+                return Ok(len - nr);
             }
 
             // 没有数据可读
diff --git a/kernel/src/driver/tty/virtual_terminal/console_map.rs b/kernel/src/driver/tty/virtual_terminal/console_map.rs
index 46f900b..e327136 100644
--- a/kernel/src/driver/tty/virtual_terminal/console_map.rs
+++ b/kernel/src/driver/tty/virtual_terminal/console_map.rs
@@ -1,5 +1,5 @@
 ///  Latin-1 字符集到 Unicode 的映射表。在这个表格中，每个位置都存储了相应 Latin-1 字符的 Unicode 编码。
-pub const LAT1_MAP: &'static [u16] = &[
+pub const LAT1_MAP: & [u16] = &[
     0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,
     0x000c, 0x000d, 0x000e, 0x000f, 0x0010, 0x0011, 0x0012, 0x0013, 0x0014, 0x0015, 0x0016, 0x0017,
     0x0018, 0x0019, 0x001a, 0x001b, 0x001c, 0x001d, 0x001e, 0x001f, 0x0020, 0x0021, 0x0022, 0x0023,
@@ -25,7 +25,7 @@ pub const LAT1_MAP: &'static [u16] = &[
 ];
 
 /// 将 VT100 图形字符映射到 Unicode 的映射表
-pub const GRAF_MAP: &'static [u16] = &[
+pub const GRAF_MAP: & [u16] = &[
     0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,
     0x000c, 0x000d, 0x000e, 0x000f, 0x0010, 0x0011, 0x0012, 0x0013, 0x0014, 0x0015, 0x0016, 0x0017,
     0x0018, 0x0019, 0x001a, 0x001b, 0x001c, 0x001d, 0x001e, 0x001f, 0x0020, 0x0021, 0x0022, 0x0023,
@@ -51,7 +51,7 @@ pub const GRAF_MAP: &'static [u16] = &[
 ];
 
 /// 将 IBM Codepage 437 字符集映射到 Unicode 的映射表
-pub const IBMPC_MAP: &'static [u16] = &[
+pub const IBMPC_MAP: & [u16] = &[
     0x0000, 0x263a, 0x263b, 0x2665, 0x2666, 0x2663, 0x2660, 0x2022, 0x25d8, 0x25cb, 0x25d9, 0x2642,
     0x2640, 0x266a, 0x266b, 0x263c, 0x25b6, 0x25c0, 0x2195, 0x203c, 0x00b6, 0x00a7, 0x25ac, 0x21a8,
     0x2191, 0x2193, 0x2192, 0x2190, 0x221f, 0x2194, 0x25b2, 0x25bc, 0x0020, 0x0021, 0x0022, 0x0023,
@@ -77,7 +77,7 @@ pub const IBMPC_MAP: &'static [u16] = &[
 ];
 
 /// 默认直接映射表
-pub const USER_MAP: &'static [u16] = &[
+pub const USER_MAP: & [u16] = &[
     0xf000, 0xf001, 0xf002, 0xf003, 0xf004, 0xf005, 0xf006, 0xf007, 0xf008, 0xf009, 0xf00a, 0xf00b,
     0xf00c, 0xf00d, 0xf00e, 0xf00f, 0xf010, 0xf011, 0xf012, 0xf013, 0xf014, 0xf015, 0xf016, 0xf017,
     0xf018, 0xf019, 0xf01a, 0xf01b, 0xf01c, 0xf01d, 0xf01e, 0xf01f, 0xf020, 0xf021, 0xf022, 0xf023,
diff --git a/kernel/src/driver/tty/virtual_terminal/mod.rs b/kernel/src/driver/tty/virtual_terminal/mod.rs
index b92aeb0..58ea162 100644
--- a/kernel/src/driver/tty/virtual_terminal/mod.rs
+++ b/kernel/src/driver/tty/virtual_terminal/mod.rs
@@ -44,7 +44,7 @@ pub const DEFAULT_BLUE: [u16; 16] = [
     0x00, 0x00, 0x00, 0x00, 0xaa, 0xaa, 0xaa, 0xaa, 0x55, 0x55, 0x55, 0x55, 0xff, 0xff, 0xff, 0xff,
 ];
 
-pub const COLOR_TABLE: &'static [u8] = &[0, 4, 2, 6, 1, 5, 3, 7, 8, 12, 10, 14, 9, 13, 11, 15];
+pub const COLOR_TABLE: & [u8] = &[0, 4, 2, 6, 1, 5, 3, 7, 8, 12, 10, 14, 9, 13, 11, 15];
 
 lazy_static! {
     pub static ref VIRT_CONSOLES: Vec<Arc<SpinLock<VirtualConsoleData>>> = {
diff --git a/kernel/src/driver/tty/virtual_terminal/virtual_console.rs b/kernel/src/driver/tty/virtual_terminal/virtual_console.rs
index f181fc1..ebda2b9 100644
--- a/kernel/src/driver/tty/virtual_terminal/virtual_console.rs
+++ b/kernel/src/driver/tty/virtual_terminal/virtual_console.rs
@@ -560,12 +560,10 @@ impl VirtualConsoleData {
     fn gotoxy(&mut self, x: i32, y: i32) {
         if x < 0 {
             self.state.x = 0;
-        } else {
-            if x as usize >= self.cols {
+        } else if x as usize >= self.cols {
                 self.state.x = self.cols - 1;
             } else {
                 self.state.x = x as usize;
-            }
         }
 
         let max_y;
diff --git a/kernel/src/driver/video/fbdev/base/mod.rs b/kernel/src/driver/video/fbdev/base/mod.rs
index e302508..16a6fbd 100644
--- a/kernel/src/driver/video/fbdev/base/mod.rs
+++ b/kernel/src/driver/video/fbdev/base/mod.rs
@@ -10,14 +10,14 @@ use crate::{
 
 use self::fbmem::{FbDevice, FrameBufferManager};
 
-const COLOR_TABLE_8: &'static [u32] = &[
+const COLOR_TABLE_8: & [u32] = &[
     0x00000000, 0xff000000, 0x00ff0000, 0xffff0000, 0x0000ff00, 0xff00ff00, 0x00ffff00, 0xffffff00,
     0x000000ff, 0xff0000ff, 0x00ff00ff, 0xffff00ff, 0x0000ffff, 0xff00ffff, 0x00ffffff, 0xffffffff,
 ];
 
-const COLOR_TABLE_16: &'static [u32] = &[0x00000000, 0xffff0000, 0x0000ffff, 0xffffffff];
+const COLOR_TABLE_16: & [u32] = &[0x00000000, 0xffff0000, 0x0000ffff, 0xffffffff];
 
-const COLOR_TABLE_32: &'static [u32] = &[0x00000000, 0xffffffff];
+const COLOR_TABLE_32: & [u32] = &[0x00000000, 0xffffffff];
 
 pub mod fbcon;
 pub mod fbmem;
diff --git a/kernel/src/filesystem/sysfs/mod.rs b/kernel/src/filesystem/sysfs/mod.rs
index f35b519..2ca9762 100644
--- a/kernel/src/filesystem/sysfs/mod.rs
+++ b/kernel/src/filesystem/sysfs/mod.rs
@@ -21,7 +21,7 @@ pub mod group;
 pub mod symlink;
 
 /// 全局的sysfs实例
-pub(self) static mut SYSFS_INSTANCE: Option<SysFS> = None;
+static mut SYSFS_INSTANCE: Option<SysFS> = None;
 
 #[inline(always)]
 pub fn sysfs_instance() -> &'static SysFS {
diff --git a/kernel/src/filesystem/vfs/mount.rs b/kernel/src/filesystem/vfs/mount.rs
index b38d76e..866c358 100644
--- a/kernel/src/filesystem/vfs/mount.rs
+++ b/kernel/src/filesystem/vfs/mount.rs
@@ -48,7 +48,7 @@ impl MountFS {
         return MountFS {
             inner_filesystem: inner_fs,
             mountpoints: SpinLock::new(BTreeMap::new()),
-            self_mountpoint: self_mountpoint,
+            self_mountpoint,
             self_ref: Weak::default(),
         }
         .wrap();
diff --git a/kernel/src/ipc/signal.rs b/kernel/src/ipc/signal.rs
index 212981f..c78221a 100644
--- a/kernel/src/ipc/signal.rs
+++ b/kernel/src/ipc/signal.rs
@@ -321,13 +321,12 @@ fn signal_wake_up(pcb: Arc<ProcessControlBlock>, _guard: SpinLockGuard<SignalStr
 
     if wakeup_ok {
         ProcessManager::kick(&pcb);
-    } else {
-        if fatal {
-            let _r = ProcessManager::wakeup(&pcb).map(|_| {
-                ProcessManager::kick(&pcb);
-            });
-        }
+    } else if fatal {
+        let _r = ProcessManager::wakeup(&pcb).map(|_| {
+            ProcessManager::kick(&pcb);
+        });
     }
+    
 }
 
 /// @brief 当一个进程具有多个线程之后，在这里需要重新计算线程的flag中的TIF_SIGPENDING位
diff --git a/kernel/src/mm/allocator/buddy.rs b/kernel/src/mm/allocator/buddy.rs
index ab249b2..7f39676 100644
--- a/kernel/src/mm/allocator/buddy.rs
+++ b/kernel/src/mm/allocator/buddy.rs
@@ -161,7 +161,7 @@ impl<A: MemoryManagementArch> BuddyAllocator<A> {
             // 然后从高往低，把剩余的页面加入链表
             let mut remain_bytes = remain_pages.data() * A::PAGE_SIZE;
 
-            assert!(remain_bytes < (1 << MAX_ORDER - 1));
+            assert!(remain_bytes < 1 << (MAX_ORDER - 1));
 
             for i in (MIN_ORDER..MAX_ORDER).rev() {
                 if remain_bytes >= (1 << i) {
diff --git a/kernel/src/mm/allocator/bump.rs b/kernel/src/mm/allocator/bump.rs
index f8df52b..6fb5a22 100644
--- a/kernel/src/mm/allocator/bump.rs
+++ b/kernel/src/mm/allocator/bump.rs
@@ -84,12 +84,11 @@ impl<MMA: MemoryManagementArch> BumpAllocator<MMA> {
                 }
             }
 
-            if found_start {
-                if area.area_base_aligned() < area.area_end_aligned() {
-                    result_area[res_cnt] = area;
-                    res_cnt += 1;
-                }
+            if found_start && area.area_base_aligned() < area.area_end_aligned() {
+                result_area[res_cnt] = area;
+                res_cnt += 1;
             }
+            
         }
 
         let res_cnt = unsafe { Self::arch_remain_areas(result_area, res_cnt) };
diff --git a/kernel/src/mm/allocator/slab.rs b/kernel/src/mm/allocator/slab.rs
index 7b461b0..6f5234a 100644
--- a/kernel/src/mm/allocator/slab.rs
+++ b/kernel/src/mm/allocator/slab.rs
@@ -17,7 +17,7 @@ impl Slab {
     pub unsafe fn new(start_addr: usize, slab_size: usize, block_size: usize) -> Slab {
         let blocks_num = slab_size / block_size;
         return Slab {
-            block_size: block_size,
+            block_size,
             free_block_list: FreeBlockList::new(start_addr, block_size, blocks_num),
         };
     }
diff --git a/kernel/src/mm/memblock.rs b/kernel/src/mm/memblock.rs
index a36dc73..1dd1e86 100644
--- a/kernel/src/mm/memblock.rs
+++ b/kernel/src/mm/memblock.rs
@@ -489,18 +489,14 @@ impl<'a> Iterator for MemBlockIter<'a> {
 
     fn next(&mut self) -> Option<Self::Item> {
         while self.index < self.inner.initial_memory_regions_num {
-            if self.usable_only {
-                if self.inner.initial_memory_regions[self.index]
+            if self.usable_only && self.inner.initial_memory_regions[self.index]
                     .flags
-                    .is_empty()
-                    == false
-                {
-                    self.index += 1;
-                    if self.index >= self.inner.initial_memory_regions_num {
-                        return None;
-                    }
-                    continue;
+                    .is_empty() == false{
+                self.index += 1;
+                if self.index >= self.inner.initial_memory_regions_num {
+                    return None;
                 }
+                continue;
             }
             break;
         }
diff --git a/kernel/src/mm/page.rs b/kernel/src/mm/page.rs
index 0e8033f..8e2b4df 100644
--- a/kernel/src/mm/page.rs
+++ b/kernel/src/mm/page.rs
@@ -293,7 +293,7 @@ impl<Arch: MemoryManagementArch> PageFlags<Arch> {
     #[inline(always)]
     pub const unsafe fn from_data(data: usize) -> Self {
         return Self {
-            data: data,
+            data,
             phantom: PhantomData,
         };
     }
diff --git a/kernel/src/mm/ucontext.rs b/kernel/src/mm/ucontext.rs
index 63f3e94..b2b9225 100644
--- a/kernel/src/mm/ucontext.rs
+++ b/kernel/src/mm/ucontext.rs
@@ -515,7 +515,7 @@ impl InnerAddressSpace {
 
         for r in regions {
             // kdebug!("mprotect: r: {:?}", r);
-            let r = r.lock().region();
+            let r = r.lock().region().clone();
             let r = self.mappings.remove_vma(&r).unwrap();
 
             let intersection = r.lock().region().intersect(&region).unwrap();
@@ -623,7 +623,7 @@ impl InnerAddressSpace {
         let new_brk = if incr > 0 {
             self.brk + incr as usize
         } else {
-            self.brk - (incr.abs())
+            self.brk - (incr.abs()) as usize
         };
 
         let new_brk = VirtAddr::new(page_align_up(new_brk.data()));
diff --git a/kernel/src/net/event_poll/mod.rs b/kernel/src/net/event_poll/mod.rs
index 5411f70..100adb1 100644
--- a/kernel/src/net/event_poll/mod.rs
+++ b/kernel/src/net/event_poll/mod.rs
@@ -598,12 +598,11 @@ impl EventPoll {
         }
 
         let test_poll = dst_file.lock_irqsave().poll();
-        if test_poll.is_err() {
-            if test_poll.unwrap_err() == SystemError::EOPNOTSUPP_OR_ENOTSUP {
-                // 如果目标文件不支持poll
-                return Err(SystemError::ENOSYS);
-            }
+        if test_poll.is_err() && test_poll.unwrap_err() == SystemError::EOPNOTSUPP_OR_ENOTSUP {
+            // 如果目标文件不支持poll
+            return Err(SystemError::ENOSYS);
         }
+        
 
         epoll_guard.ep_items.insert(epitem.fd, epitem.clone());
 
diff --git a/kernel/src/process/exec.rs b/kernel/src/process/exec.rs
index 3e3b3a4..1779d02 100644
--- a/kernel/src/process/exec.rs
+++ b/kernel/src/process/exec.rs
@@ -21,10 +21,10 @@ const BINARY_LOADERS: [&'static dyn BinaryLoader; 1] = [&ELF_LOADER];
 
 pub trait BinaryLoader: 'static + Debug {
     /// 检查二进制文件是否为当前加载器支持的格式
-    fn probe(self: &'static Self, param: &ExecParam, buf: &[u8]) -> Result<(), ExecError>;
+    fn probe(&'static self, param: &ExecParam, buf: &[u8]) -> Result<(), ExecError>;
 
     fn load(
-        self: &'static Self,
+        &'static self,
         param: &mut ExecParam,
         head_buf: &[u8],
     ) -> Result<BinaryLoaderResult, ExecError>;
diff --git a/kernel/src/process/fork.rs b/kernel/src/process/fork.rs
index 3a3ee20..89968f7 100644
--- a/kernel/src/process/fork.rs
+++ b/kernel/src/process/fork.rs
@@ -329,10 +329,8 @@ impl ProcessManager {
 
         // 如果新进程使用不同的 pid 或 namespace，
         // 则不允许它与分叉任务共享线程组。
-        if clone_flags.contains(CloneFlags::CLONE_THREAD) {
-            if clone_flags.contains(CloneFlags::CLONE_NEWUSER | CloneFlags::CLONE_NEWPID) {
-                return Err(SystemError::EINVAL);
-            }
+        if clone_flags.contains(CloneFlags::CLONE_THREAD) && clone_flags.contains(CloneFlags::CLONE_NEWUSER | CloneFlags::CLONE_NEWPID) {
+            return Err(SystemError::EINVAL);
             // TODO: 判断新进程与当前进程namespace是否相同，不同则返回错误
         }
 
diff --git a/kernel/src/sched/completion.rs b/kernel/src/sched/completion.rs
index 69e9fe2..3c088fe 100644
--- a/kernel/src/sched/completion.rs
+++ b/kernel/src/sched/completion.rs
@@ -1,5 +1,5 @@
 #![allow(dead_code)]
-use std::intrinsics::saturating_add;
+use core::intrinsics::saturating_add;
 
 use system_error::SystemError;
 
